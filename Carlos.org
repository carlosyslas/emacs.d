* My Emacs configuration file
  I decided to use literate programming for my configuration file, mainly spired by [[http://sachachua.com/][Sacha Chua]], since it's easier to read an understand what's going on in my conf and what kind of packages I'm using and I'm trying to learn.
* Basic configuration

First I have to add ~/.emacs.d to the load path in order to easily load additional .el files 
#+begin_src emacs-lisp :tangle yes
(add-to-list 'load-path user-emacs-directory) ;; ~/.emacs.d
#+end_src

I also gatta check if the current environment is a mac computer.
#+begin_src emacs-lisp :tangle yes
(setq is-mac (equal system-type 'darwin))
#+end_src
** Getting rid of the anoying stuff
I disable the stupid bell sound.
#+begin_src emacs-lisp :tangle yes
(setq visible-bell t)
#+end_src

And I only want to be notified by errors
#+begin_src emacs-lisp :tangle yes
(setq warning-minimum-level :error)
#+end_src

I don't need the default scratch buffer content, so I set it to nil
#+begin_src emacs-lisp :tangle yes
(setq initial-scratch-message nil)
#+end_src

I don't want to see the statup message(that's for newbies XD)
#+begin_src emacs-lisp :tangle yes
(setq inhibit-startup-message t)
#+end_src

I get rid of the toolbar, scrollbar and menu bar
#+begin_src emacs-lisp :tangle yes
(menu-bar-mode -1)

(if (boundp 'tool-bar-mode)
    (tool-bar-mode -1))

(if (boundp 'scroll-bar-mode)
    (scroll-bar-mode -1))
#+end_src

* Helper functions

This is a set of helper functions for an easier configuration.

#+begin_src emacs-lisp :tangle yes
(defun add-to-path (dir)
"Adds dir to the PATH environment variable"
(setenv "PATH" (concat (format "%s:" dir) (getenv "PATH"))))
#+end_src
* Local environment setup
#+begin_src emacs-lisp :tangle yes
(add-to-path "~/.cask/bin")
#+end_src


* Cask
I'm using cask for managing my installed packages now :)
#+BEGIN_SRC emacs-lisp :tangle yes
(require 'cask "~/.cask/cask.el")
(cask-initialize)
#+END_SRC

* Smex
I'm trying smex for a better M-x eperience.

#+begin_src emacs-lisp :tangle yes
(global-set-key (kbd "M-x") 'smex)
#+end_src

* Yasnippet
#+begin_src emacs-lisp :tangle yes
(yas-global-mode)
#+end_src

* Projectile
  In order to have projectile enabled globally I have to call it's gobal-mode function.
#+BEGIN_SRC emacs-lisp :tangle yes
(projectile-global-mode)
#+END_SRC
* TODOS
** TODO Check how to make the lines not to be hidden when the screen is thinner than text. 
** TODO Check use-package to better manage packages
** TODO Check cask to better manage packages
